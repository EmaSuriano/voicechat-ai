name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

# Performance optimizations:
# - Parallel execution of lint and test jobs
# - Conditional multi-platform testing (only on main branch)
# - Aggressive caching for system deps, npm, and Electron binaries
# - Reduced build scope for PRs and feature branches

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    # Remove dependency on lint to run in parallel

    strategy:
      fail-fast: false
      matrix:
        # Run on Ubuntu for speed, add other platforms only for main branch
        os: ${{ github.ref == 'refs/heads/main' && fromJSON('["ubuntu-latest", "windows-latest", "macos-latest"]') || fromJSON('["ubuntu-latest"]') }}
        node-version: [18]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache system dependencies (Linux)
        if: runner.os == 'Linux'
        id: cache-system-deps
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-system-deps-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-system-deps-

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux' && steps.cache-system-deps.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon-dev libxss1 libasound2-dev

      - name: Cache Electron binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/electron
          key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-

      - name: Install dependencies
        run: npm ci

      - name: Build application (test)
        run: npm run package
        env:
          CI: true
          # Remove DEBUG to reduce log output
          ELECTRON_CACHE: ~/.cache/electron

  build-test:
    name: Test Full Build
    runs-on: ubuntu-latest
    # Run independently for faster feedback
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only run full build on main branch pushes

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache system dependencies
        id: cache-system-deps-build
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-system-deps-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-system-deps-

      - name: Install system dependencies
        if: steps.cache-system-deps-build.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxkbcommon-dev libxss1 libasound2-dev

      - name: Cache Electron binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/electron
          key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-

      - name: Install dependencies
        run: npm ci

      - name: Test full build
        run: npm run make
        env:
          CI: true
          ELECTRON_CACHE: ~/.cache/electron
          # Disable unnecessary features for test builds
          ELECTRON_SKIP_BINARY_DOWNLOAD: false

      - name: List build output
        run: |
          echo "Build output:"
          ls -la out/ || echo "No out directory"

      - name: Upload test build
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: test-build-linux
          path: out/
          retention-days: 7
