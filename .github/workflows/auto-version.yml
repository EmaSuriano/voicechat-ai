name: Auto Version Bump

on:
  push:
    branches: [main, master]
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'docs/**'
      - '.github/**'
      - '*.md'
      - 'package.json'
      - 'package-lock.json'

jobs:
  bump-version:
    name: Bump Version and Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip version]') && !contains(github.event.head_commit.message, '[skip release]')"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Determine version bump type
        id: bump_type
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          
          if [[ $COMMIT_MSG =~ \[major\] ]] || [[ $COMMIT_MSG =~ BREAKING\ CHANGE ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
            echo "ðŸ“ˆ Major version bump detected"
          elif [[ $COMMIT_MSG =~ \[minor\] ]] || [[ $COMMIT_MSG =~ feat: ]] || [[ $COMMIT_MSG =~ feature: ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
            echo "ðŸ†• Minor version bump detected"
          else
            echo "type=patch" >> $GITHUB_OUTPUT
            echo "ðŸ”§ Patch version bump detected"
          fi

      - name: Bump version
        id: version_bump
        run: |
          BUMP_TYPE="${{ steps.bump_type.outputs.type }}"
          echo "Bumping $BUMP_TYPE version..."
          
          # Bump version and capture the new version
          NEW_VERSION=$(npm version $BUMP_TYPE --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version_bump.outputs.new_version }} [skip ci]"
          git push

      - name: Create tag and trigger release
        run: |
          NEW_VERSION="${{ steps.version_bump.outputs.new_version }}"
          echo "Creating tag: $NEW_VERSION"
          
          git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
          git push origin "$NEW_VERSION"
          
          echo "ðŸš€ Tag created: $NEW_VERSION"
          echo "Release workflows will be triggered automatically."
